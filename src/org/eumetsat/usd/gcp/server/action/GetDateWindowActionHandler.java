package org.eumetsat.usd.gcp.server.action;

import org.eumetsat.usd.gcp.server.data.CalibrationDataManager;
import org.eumetsat.usd.gcp.shared.action.GetDateWindow;
import org.eumetsat.usd.gcp.shared.action.GetDateWindowResult;

import com.google.inject.Inject;
import com.gwtplatform.dispatch.rpc.server.ExecutionContext;
import com.gwtplatform.dispatch.rpc.server.actionhandler.ActionHandler;
import com.gwtplatform.dispatch.shared.ActionException;

/**
 * Get Date Window Action Handler. Generated by GWTP Plugin.
 * 
 * @author USD/C/PBe
 */
public class GetDateWindowActionHandler implements ActionHandler<GetDateWindow, GetDateWindowResult>
{
    /** Calibration Data Manager. */
    private final CalibrationDataManager calibrationDataManager;

    /**
     * Constructor.
     * 
     * @param calibrationDataManager
     *            calibration data manager.
     */
    @Inject
    public GetDateWindowActionHandler(final CalibrationDataManager calibrationDataManager)
    {
        this.calibrationDataManager = calibrationDataManager;
    }

    @Override
    public final GetDateWindowResult execute(final GetDateWindow action, final ExecutionContext context)
            throws ActionException
    {
        return new GetDateWindowResult(calibrationDataManager.dateWindowForUser(action.getUserID()));
    }

    @Override
    public final void undo(final GetDateWindow action, final GetDateWindowResult result, final ExecutionContext context)
            throws ActionException
    {
    }

    @Override
    public final Class<GetDateWindow> getActionType()
    {
        return GetDateWindow.class;
    }
}
