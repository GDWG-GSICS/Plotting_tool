package org.eumetsat.usd.gcp.server.action;

import org.eumetsat.usd.gcp.server.catalog.CatalogNavigator;
import org.eumetsat.usd.gcp.server.data.CalibrationDataManager;
import org.eumetsat.usd.gcp.server.guice.CatalogNavigatorFactory;
import org.eumetsat.usd.gcp.shared.action.GetChannels;
import org.eumetsat.usd.gcp.shared.action.GetChannelsResult;

import com.google.inject.Inject;
import com.gwtplatform.dispatch.rpc.server.ExecutionContext;
import com.gwtplatform.dispatch.rpc.server.actionhandler.ActionHandler;
import com.gwtplatform.dispatch.shared.ActionException;

/**
 * Get Channels Action Handler. Generated by GWTP Plugin.
 * 
 * @author USD/C/PBe
 */
public class GetChannelsActionHandler implements ActionHandler<GetChannels, GetChannelsResult>
{
    /** Catalog Navigator Factory. */
    private CatalogNavigatorFactory catalogNavigatorFactory;

    /** Calibration Data Manager. */
    private CalibrationDataManager calibrationDataManager;

    /**
     * Constructor.
     */
    @Inject
    public GetChannelsActionHandler(final CatalogNavigatorFactory catalogNavigatorFactory,
            final CalibrationDataManager calibrationDataManager)
    {
        this.catalogNavigatorFactory = catalogNavigatorFactory;
        this.calibrationDataManager = calibrationDataManager;
    }

    @Override
    public final GetChannelsResult execute(final GetChannels action, final ExecutionContext context)
            throws ActionException
    {
        // Get corresponding catalog navigator.
        CatalogNavigator catalogNavigator = catalogNavigatorFactory.create(action.getCatalog());

        // Get url pointing to NetCDF file.
        String datasetURL = catalogNavigator.getDatasetURL(action.getGPRC(), action.getCorrType(),
                action.getSatInstr(), action.getRefSatInstr(), action.getMode(), action.getYear(), action.getDate(),
                action.getVersion());

        // Return list of channel names.
        return new GetChannelsResult(calibrationDataManager.channelNamesFrom(datasetURL));
    }

    @Override
    public final void undo(final GetChannels action, final GetChannelsResult result, final ExecutionContext context)
            throws ActionException
    {
    }

    @Override
    public final Class<GetChannels> getActionType()
    {
        return GetChannels.class;
    }
}
