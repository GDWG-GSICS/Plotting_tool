package org.eumetsat.usd.gcp.server.persistence;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.IndexColumn;

/**
 * User generated by hbm2java.
 */
@Entity
@Table(name = "user")
public class User implements java.io.Serializable
{
    /** Name column name. */
    public static final String NAME = "name";
    /** Id column name. */
    public static final String ID = "user_id";
    /** Password hash column name. */
    public static final String PASSWORD_HASH = "password_hash";

    /** Auto-generated serial version UID. */
    private static final long serialVersionUID = -669112068749263157L;

    /** Unique id. */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = ID)
    private long id;

    /** Name column. */
    @Column(name = NAME, unique = true, nullable = false, length = 20)
    private String name;

    /** Password hash column. */
    @Column(name = PASSWORD_HASH, nullable = false, length = 255)
    private String passwordHash;

    /** List of plot configurations. */
    @OneToMany(fetch = FetchType.LAZY, cascade = { CascadeType.ALL }, orphanRemoval = true)
    @JoinColumn(name = ID, nullable = false, unique = true)
    @IndexColumn(name = "idx")
    private List<PlotConfiguration> plotConfigurations = new ArrayList<PlotConfiguration>(0);

    /**
     * Constructor.
     */
    public User()
    {
    }

    /**
     * Constructor.
     * 
     * @param name
     *            name.
     * @param passwordHash
     *            password hash.
     */
    public User(final String name, final String passwordHash)
    {
        this.name = name;
        this.passwordHash = passwordHash;
    }

    /**
     * Constructor.
     * 
     * @param name
     *            name.
     * @param plotConfigurations
     *            plot configurations.
     */
    public User(final String name, final List<PlotConfiguration> plotConfigurations)
    {
        this.name = name;
        this.plotConfigurations = plotConfigurations;
    }

    /**
     * Get id.
     * 
     * @return id.
     */
    public final long getId()
    {
        return this.id;
    }

    /**
     * Set id.
     * 
     * @param id
     *            id.
     */
    public final void setId(final long id)
    {
        this.id = id;
    }

    /**
     * Get name.
     * 
     * @return name.
     */
    public final String getName()
    {
        return name;
    }

    /**
     * Set name.
     * 
     * @param name
     *            name.
     */
    public final void setName(final String name)
    {
        this.name = name;
    }

    /**
     * Get password hash.
     * 
     * @return password hash.
     */
    public final String getPasswordHash()
    {
        return passwordHash;
    }

    /**
     * Set password hash.
     * 
     * @param passwordHash
     *            password hash.
     */
    public final void setPasswordHash(final String passwordHash)
    {
        this.passwordHash = passwordHash;
    }

    /**
     * Get plot configurations.
     * 
     * @return plot configurations.
     */
    public final List<PlotConfiguration> getPlotConfigurations()
    {
        return this.plotConfigurations;
    }

    /**
     * Set plot configurations.
     * 
     * @param plotConfigurations
     *            plot configurations.
     */
    public final void setPlotConfigurations(final List<PlotConfiguration> plotConfigurations)
    {
        this.plotConfigurations = plotConfigurations;
    }

}
